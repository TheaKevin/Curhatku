import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { SetStateAction, useEffect, useState } from 'react'
import axios from 'axios'
import { Loading } from './Loading'
import { Route, Routes, HashRouter, Link, Navigate } from 'react-router-dom';
import { Login } from './Login'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [loading, setLoading] = useState(true);
  const [isLoggedIn, setLogin] = useState(false);
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [screenHeight, setScreenHeight] = useState(0);

  useEffect(() => {
    (
      async () => {
        await axios.get('http://localhost:8080/user', {
          headers: {
              'Content-Type': 'application/json'
          },
          withCredentials: true
        })
        .then(res => {
          res.status === 200 ? loginSuccess(res.data.user.username, res.data.user.email) : setLogin(false);
          setLoading(false)
        })
        .catch(error => {
          setLogin(false);
          setLoading(false)
        });

        setScreenHeight(window.innerHeight);
      }
    )();
  }, [])

  const loginSuccess = (username: SetStateAction<string>, email: SetStateAction<string>) => {
    setLogin(true);
    setName(username);
    setEmail(email)
  }

  const handleLogOut = async () => {
    await axios.post('http://localhost:8080/logout', {}, {
      headers: {
          'Content-Type': 'application/json'
      },
      withCredentials: true
    })
    .then(res => {
      setLogin(false);
    })
    .catch(error => {
      setLogin(false);
    });
  }

  if(loading){
    return(
      <Loading />
    )
  }

  if (!isLoggedIn){
    return(
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <HashRouter>
          <Routes>
            <Route path="/" element={ <Login /> }/>
            <Route path="*" element={<Navigate to ="/" />}/>
          </Routes>
        </HashRouter> 
      </>
    );
  } else {
    return (
      <div style={{ display: 'flex', height: '100%', minHeight: screenHeight }}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <HashRouter>
          <main className='w-100 mainContainer'>
            <Routes>
              <Route path="/" element={ <Login /> }/>
              <Route path="*" element={<Navigate to ="/" />}/>
            </Routes>
          </main>
        </HashRouter>
      </div>
    );
  }
}
